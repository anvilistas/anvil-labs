(()=>{var s=(e,r)=>()=>(r||e((r={exports:{}}).exports,r),r.exports);var n=s((exports,module)=>{var oldRead=()=>{throw new Error("not implemented")};function updateFiles(filename,sourceCode){if(!filename.startsWith("app/"))return sourceCode;let files=Sk.builtinFiles.files;files[filename]=sourceCode;let[app,root]=filename.split("/");files[`app/${root}/__init__.py`]??="pass";var x="var y = {$source$};";try{eval(x.replace("{$source$}",JSON.stringify(sourceCode))),console.log(`%cSUCCESS:${filename}`,"color: green;")}catch(e){console.error(`%cPROBLEM LOADING ${filename}`,"color: red;"),console.error(e)}return sourceCode}function anvilLabsRead(e){let r=oldRead(e);return r instanceof Sk.misceval.Suspension?Sk.misceval.promiseToSuspension(Sk.misceval.asyncToPromise(()=>r).then(o=>updateFiles(e,o))):updateFiles(e,r)}Object.defineProperty(Sk,"read",{get(){return anvilLabsRead},set(e){oldRead=e},configurable:!0})});n();})();
